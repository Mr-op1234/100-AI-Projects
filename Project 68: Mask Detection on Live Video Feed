Description:
This project detects whether a person is wearing a face mask using a webcam. It uses a CNN classifier trained on masked and unmasked face images and runs detection in real-time.

Goal
Detect faces and classify each as ‚ÄúMask‚Äù or ‚ÄúNo Mask‚Äù on a live video feed using OpenCV and a trained PyTorch model.

Code
import cv2
import torch
import torch.nn as nn
import torchvision.transforms as T
from PIL import Image
 
# Dummy CNN (replace with trained model for mask detection)
class MaskClassifier(nn.Module):
    def __init__(self):
        super().__init__()
        self.net = nn.Sequential(
            nn.Conv2d(3, 16, 3, padding=1), nn.ReLU(), nn.MaxPool2d(2),
            nn.Conv2d(16, 32, 3, padding=1), nn.ReLU(), nn.AdaptiveAvgPool2d((1, 1)),
            nn.Flatten(), nn.Linear(32, 2)
        )
 
    def forward(self, x):
        return self.net(x)
 
# Load your trained model
model = MaskClassifier()
model.eval()
 
# Transformation for face crops
transform = T.Compose([
    T.Resize((128, 128)),
    T.ToTensor()
])
 
# Load OpenCV face detector
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")
 
# Start webcam
cap = cv2.VideoCapture(0)
labels = ["Mask", "No Mask"]
 
print("üé• Mask detection started. Press 'q' to quit.")
while True:
    ret, frame = cap.read()
    if not ret:
        break
 
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.2, minNeighbors=5)
 
    for (x, y, w, h) in faces:
        face = frame[y:y+h, x:x+w]
        face_img = Image.fromarray(cv2.cvtColor(face, cv2.COLOR_BGR2RGB))
        input_tensor = transform(face_img).unsqueeze(0)
 
        with torch.no_grad():
            pred = model(input_tensor)
            class_idx = torch.argmax(pred, dim=1).item()
            label = labels[class_idx]
            color = (0, 255, 0) if label == "Mask" else (0, 0, 255)
 
        cv2.rectangle(frame, (x, y), (x+w, y+h), color, 2)
        cv2.putText(frame, label, (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, color, 2)
 
    cv2.imshow("Mask Detection", frame)
    if cv2.waitKey(1) & 0xFF == ord("q"):
        break
 
cap.release()
cv2.destroyAllWindows()
